<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEpGQAAAAAAAAAAAADs2
        MCswKyU7PDkzODEtJjs7Ni0hNSwjADIpHwEpKCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOTc1AQAA
        AAAAAAACtLCuyL+7uf+0r636uri3/4+Pj53f4eYApKWpAwkJCAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeHJvAKGXkwCKgn4BlI6LBIN/fQR8eXcEcGxqBDQx
        MAQEBAQF////AgAAAAXUz83I/Pn4/9TNyvra3uL/mZqdo////wBaXWAHFBMSB15bWAaFgX4Ed3NxBYiE
        gQWMhoMCnJWSAHhycAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAAAAAAAAMD
        AwADAwMAAwICAgkJCAhZW2EDAAAAF6+no9rl3t3/ta2q+tfT1P+AfHq0AAAACi8uLg0DAgIHAgIBAAIC
        AQAAAAAAAAAAAAAAAAMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALuyrAEAAAABSERCJn95
        dYN/e3h4g4B9a4iDgGVYU1BAAAAAIwsLCysAAAA7pZ6a3Ma+vP+LhYL70cjE/4eBfbkAAAA2AAEBNDYz
        MUN8d3N/fHh1inh0cYx/enaTZmFeQgAAAAFwa2gCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqKCeAv//
        /wBgWlhKu7e3/767u/66s7D8ta6t/2xmZLQAAABNDg0NYAAAAFIzMC54dm9q93JqZf9waWXcBwcHXAYG
        BV0AAABRTElGka2mpP+5s7H9w7y6+9LNzP+HgX9/////AIWAfgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACQh4ECsaOXAEM9OD2zqqj9r6el/F1XVPxaVlP/OTY08w4ODWwAAABOCAcHYGReXJZ2b2vjd3Br/3dw
        bc9NSEeBAAAAUgcGBlovLSvcU09N/1hTT/qRion4ubKx/29nYnD///8AqZ+ZAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHRuaQNybWgAYl5ZOamgm/+cko/+T0tJ/XJraP16dHH+Qj08iGNcWLp7cm7rgHp1/o2F
        gv+AfHr/jISA/3t1cPhxaGTVMi8tfGxmZO14cW7/TUlH/YF6d/yxp6L/fnh0bKOblgCfl5IEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAhoF9AaKemQCOioYSk42I229pZf9eWVb9f3hz/5WMiPpbV1PnfHZ0/4eB
        gf+Jhon9ZWBf/m9iXf9mY2T9iYSH/YF7ev9RTkvjhn968oqCff9iXVr+XllV/42HgvmemJM4r6ijAJ6X
        kgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAj3VuBItxagCCaGB1mYyI/4uEgPBYU1Cfb2tq9YF+
        gP+Sior8lIuG/p+ZnP9pVUv/iGlY/25gWf+tqbH/p6Gm/Y2Hiv50b27/ZF9cn3x1cdycko7/gWljsId4
        ewCLfYADfWRVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISAfQCuopwEsaWgAKWYkmqtpKD/pJuWwnZz
        c52Lg4D/mIuJ/ImCgP+YjYn/xL69/3hqYv+CaFn/dWpm/7m0t/+spqr/pJ2f/HBqav9UUFC+o5qWnayj
        n/+nm5aox8HAAMfBwAOPgXoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdW5oAJ2WkwSclJEAlo+Mdp6V
        kv+RiobPdnFuxoRTSf+UdHD9sKyt/83Gxf/z8O7/6efn/9rT0v/Iw8P/1c/N/6Ceov+vp6j+Z2Fe/zk4
        N+GHgHy7npWR/5iQjamnmpgAqp6cA354dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgm1pBG5Q
        TQB3YVxlkXt5/4+Lh8uDeHbAiW5w/66io/23sLD/087N//r39f/EqqT/oouF/9C5sv/Z1tX/urGw/7iw
        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
        AL/+gAE//oABf/5AAj/+IAB//xAJf/9ICv8=
</value>
  </data>
</root>